@{
    var randomStr = DateTime.Now.ToString().ToLower().Replace(":", "").Replace("pm", "").Replace("am", "");
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <title>@ViewData["title"] | CSF NIGERIA</title>
    <meta content="" name="description">
    <meta content="" name="keywords">



    <script src="~/js/jquery-3.5.1.min.js"></script>

    <script src="~/CSF/assets/vendor/aos/aos.js"></script>
    <script src="~/CSF/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/CSF/assets/vendor/glightbox/js/glightbox.min.js"></script>
    <script src="~/CSF/assets/vendor/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="~/CSF/assets/vendor/swiper/swiper-bundle.min.js"></script>
    <script src="~/CSF/assets/vendor/php-email-form/validate.js"></script>
    <script src="~/CSF/assets/js/main.js"></script>

    <script src="~/js/Csf.js?v=@randomStr"></script>
    <script src="~/js/app.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- Favicons -->
    <link href="~/Images/Logooo.png" rel="icon">
    <link href="~/Images/OfficialLogo.png" rel="apple-touch-icon">

    <!--Vendor CSS Files-->
    <link href="~/CSF/assets/vendor/animate.css/animate.min.css" rel="stylesheet" />
    <link href="~/CSF/assets/vendor/aos/aos.css" rel="stylesheet" />
    <link href="~/CSF/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/CSF/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet" />
    <link href="~/CSF/assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet" />
    <link href="~/CSF/assets/vendor/glightbox/css/glightbox.min.css" rel="stylesheet" />
    <link href="~/CSF/assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet" />

    <link href="~/CSF/assets/css/style.css" rel="stylesheet" />

    <script>

        function errorAlert(message) {
            Swal.fire({
                icon: 'error',
                text: message,
                confirmButtonColor: "#00A7EF",
                timer: 30000,
            })
        }

        function infoAlert(message) {
            Swal.fire({
                icon: 'info',
                text: message,
                confirmButtonColor: "#00A7EF",
            })
        }

        function infoAlertWithStyles(message) {
            Swal.fire({
                title: 'Notification',
                icon: 'info',
                text: message,
            })
        }

        function successAlert(message) {
            Swal.fire({
                icon: 'success',
                text: message,
                confirmButtonColor: "#00A7EF",
                timer: 30000,
            })
        }

        function newErrorAlert(message, url) {
            Swal.fire({
                icon: 'error',
                text: message,
                confirmButtonColor: "#00A7EF",
            }).then((isConfirm) => {
                if (isConfirm) {
                    location.reload(url);
                }
            })
        }

        function newSuccessAlert(message, url) {
            Swal.fire({
                icon: 'success',
                text: message,
                confirmButtonColor: "#00A7EF",
            }).then((isConfirm) => {
                if (isConfirm) {
                    location.reload(url);
                }
            })
        }

        function successAlertWithRedirect(message, url) {
            swal.fire({
                title: "Success",
                text: message,
                icon: "success",
                timer: 30000,
                confirmButtonColor: "#00A7EF",
                overlay: "background - color: rgba(43, 165, 137, 0.45)",
            }).then(function () {

                location.href = url;
            })
        }



        function errorAlertwithTwoButtons(yesUrl, noUrl, newUrl, errorTitle) {
            swal({
                title: errorTitle,
                text: "",
                icon: "error",
                buttons: {
                    cancle: "No",
                    confirmButtonColor: "#00A7EF",
                    change: "Yes",
                    new: "Create Pin",
                },
            })
                .then((status) => {
                    debugger;
                    switch (status) {
                        case "change":
                            location.href = yesUrl;
                            break;
                        case "new":
                            location.href = newUrl;
                            break;
                        default:
                            location.href = noUrl;
                    }
                });
        }

        function SweeTest(yesUrl, noUrl) {
            Swal.fire({
                title: "Unverified E-mail Address",
                text: "Check your inbox Or Change email",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#00A7EF",
                confirmButtonText: "Resend Email",
                cancelButtonText: "Change Email",
                closeOnConfirm: false,
                closeOnCancel: false
            })
                .then((result) => {
                    debugger
                    if (result.isConfirmed) {
                        location.href = yesUrl
                    }
                    else {
                        location.href = noUrl
                    }

                });
        }
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</head>

<body>
    <!-- Loader -->
    <div id="loader-wrapper">
        <div id="loader">
            <div class="loader-ellips">
                <span class="loader-ellips__dot"></span>
                <span class="loader-ellips__dot"></span>
                <span class="loader-ellips__dot"></span>
                <span class="loader-ellips__dot"></span>
            </div>
        </div>
    </div>

    @*<main role="main" class="pb-3">
        @RenderBody()
    </main>*@

    <main id="main">
        @RenderBody()
    </main><!-- End #main -->
</body>
</html>